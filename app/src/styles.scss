@use '@angular/material' as mat;
@use '../m3-theme';
@use './app/layout/layout-component.theme';

@include mat.core();

$angular-material-3-light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    density: (
      scale: 0,
    ),
  )
);

$angular-material-3-dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$magenta-palette,
      tertiary: mat.$violet-palette,
    ),
    density: (
      scale: 0,
    ),
  )
);

// Light theme
// Un comment below to use theme created by ng add @angular-material
// $theme: $angular-material-3-light-theme;

// Light Theme created by ng generate @angular-material:m3-theme
$theme: m3-theme.$light-theme;

// Dark theme
// Un-comment below to use dark theme using @angular/material
// $dark-theme: $angular-material-3-dark-theme;

// Dark Theme created by ng generate @angular-material:m3-theme
$dark-theme: m3-theme.$dark-theme;

:root {
  @include mat.all-component-themes($theme);

  // Components themes
  @include layout-component.theme($theme);

  // Add backwards compatibility styles for color variants
  @include mat.color-variants-backwards-compatibility($theme);

  @media (prefers-color-scheme: dark) {
    @include mat.all-component-colors($dark-theme);

    // Components themes
    @include layout-component.theme($dark-theme);

    @include mat.color-variants-backwards-compatibility($dark-theme);
  }
}

// Consider doing something like this: https://pkief.medium.com/automatic-dark-mode-detection-in-angular-material-8342917885a0

/* Either we important here or in angular.json, don't do both. */
@import 'cropperjs/dist/cropper.css';

html,
body {
  height: 100%;
  overflow: hidden;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

a {
  color: var(--mat-app-text-color);
  text-decoration: underline;
}

a:hover {
  text-decoration: none;
}

h1 {
  word-wrap: break-word;
}

/** TODO: Validate if we want to do this on all, or only on textarea. */
textarea,
select,
input {
  field-sizing: content;
}

.padding {
  padding: 1em;
}

.info-card {
  padding: 2em;
}

.blur {
  color: transparent;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}

.dimmed {
  font-size: 0.8em;
}

.column-content {
  overflow: scroll;
  box-sizing: border-box;
}

.warning {
  padding: 2em;
  color: var(--mat-form-field-error-text-color);
}

.flex {
  display: flex !important;
  gap: 1em;
}

.full-width {
  width: 100%;
}

.search-input {
  background-color: var(--mat-app-background-color);
  color: var(--mat-app-text-color);
  border: 1px solid var(--mat-app-text-color);
  border-radius: 20px;
  padding: 0.8em 1.2em;
  width: 100%;
}

.color-picker {
  width: 0px;
  height: 1px;
  color: transparent;
  background: transparent;
  border: 1px solid transparent;
}

.sidenav-scroll-wrapper,
.sidenav-content,
.sidenav-content-marginless,
.column-content {
  overscroll-behavior: contain;
}

// .sidenav-content {
//   display: flex;
// }

.tab-icon {
  margin-right: 8px;
}

.type {
  margin-bottom: 1em;
}

.action {
  margin-bottom: 1em;
}

.capitalize {
  text-transform: capitalize;
}

.link {
  text-decoration: none;
}

.link:hover {
  text-decoration: underline;
}

/** This makes the mat-input-field possible to go smaller than 180px. */
.mat-mdc-form-field-infix {
  width: 100% !important;
}

.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block; /* Ensure the element is a block or inline-block */
  width: 100%; /* Ensure the element has a defined width */
}

.wrap {
  word-wrap: break-word;
}

.full-size {
  width: 100%;
}

.toolbar-spacer {
  flex: 1 1 auto;
}

.spacer {
  flex: 1 1 auto;
}

.file-frame {
  border: 0;
  min-height: 480px;
}

.file-frame {
  width: 100%;
  height: 100%;
  border: none; /* Optional: Remove iframe border */
}

.clickable {
  cursor: pointer;
}

.centered {
  text-align: center;
}

// .file-frame body {
//   margin: 0;
//   padding: 0;
//   display: flex;
//   justify-content: center;
//   align-items: center;
// }

// .file-frame img {
//   width: 100%;
//   height: 100%;
//   object-fit: contain; /* Adjust as needed: contain, cover, fill */
// }

.margin-bottom {
  margin-bottom: 1em;
}

/** Makes the mat-icon-button within app toolbar look green. */
.toolbar-icon-button .mat-icon {
  color: var(--mdc-text-button-label-text-color);
}

[mat-icon-button] {
  vertical-align: middle !important;
}

@media (max-width: 959.98px) {
  .hide-small {
    display: none !important;
  }

  .margin-bottom {
    margin-bottom: 8px;
  }
}
